#!/bin/bash

# source config
prog=rheostoick
config="/etc/$prog.d/config"
set -a
. "$config"
set +a

# default settings
LOG_FILE="${LOG_FILE--}"
RHEOSTOICK_MOUNTED="${RHEOSTOICK_MOUNTED-1}"

# vars
hooks="/etc/$prog.d/hooks"
hostname="${HOSTNAME%%.*}"
usage="Syntax: $prog <action>"

# run as 'rheostoick foo' when called as 'restic_foo' or 'rheostoick_foo'
if [[ $# == 0 && "${0##*/}" == restic_* ]]; then
	exec "$prog" "${0##*/restic_}"
elif [[ $# == 0 && "${0##*/}" == ${prog}_* ]]; then
	exec "$prog" "${0##*/${prog}_}"
fi

# parse args
action="$1"
args_var="RHEOSTOICK_${action^^}"

# check args
if (( $# != 1 )); then
	echo "$usage" >&2
	exit 1
# check that args_var was defined in config
elif [[ -z "${!args_var}" ]]; then
	echo "$args_var is not defined in config: $config" >&2
	exit 1
# check repo environment variables
elif [[ -z "$RESTIC_REPOSITORY" && -z "$RESTIC_REPOSITORY_FILE" ]]; then
	echo "Repository not defined" >&2
	echo "Set RESTIC_REPOSITORY or RESTIC_REPOSITORY_FILE in config: $config" >&2
	exit 1
# check passwd environment variables
elif [[ -z "$RESTIC_PASSWORD_FILE" && -z "$RESTIC_PASSWORD_COMMAND" ]]; then
	echo "Password not defined" >&2
	echo "Set RESTIC_PASSWORD_FILE or RESTIC_PASSWORD_COMMAND in config: $config" >&2
	exit 1
# make sure another instance of this script isn't running
elif pids="$(pidof -x "$prog")"; (( $(wc -w <<< "$pids") > 1 )); then
	echo "One or more other $prog processes are already running: $pids" >&2
	exit 1
fi

# start logging
if [[ "$LOG_FILE" == - ]]; then
	: # do nothing
elif [[ "$LOG_FILE" == syslog ]]; then
	[[ -t 1 ]] && echo "Logging to $LOG_FILE" >&2
	exec &> >(logger -e -t "$prog" --id=$$ -p local0.info)
else
	[[ -t 1 ]] && echo "Logging to $LOG_FILE" >&2
	mkdir -pv "$(dirname "$LOG_FILE")"
	exec &>> "$LOG_FILE"
fi

# print timestamp
timefmt="%F %T %:z "
if [[ "$LOG_FILE" == syslog ]]; then
	timefmt=""
else
	echo "=========================="
fi
date +"$timefmt$prog: start $action"

# be nice
command -v renice &>/dev/null && renice 10 -p $$

# sanity checks
#
# check mount point
if (( RHEOSTOICK_MOUNTED != 0 )) && ! mountpoint -q "$RESTIC_REPOSITORY"; then
	echo "Not a mount point: $RESTIC_REPOSITORY" >&2
	exit 1
# create repo if it doesn't exist
# https://restic.readthedocs.io/en/stable/075_scripting.html
# if repo already exists, `restic init` errors out without overwriting it
elif ! restic snapshots &>/dev/null && ! restic init; then
	if ! restic init; then
		echo  "Failed to initialize repository: $RESTIC_REPOSITORY" >&2
		exit 1
	fi
fi

# run hooks
for hook in "$hooks"/*.pre; do
	if [[ -x "$hook" ]]; then
		echo "Running hook: $hook" >&2
		"$hook" "$action" "$retval" 2>&1 | sed '1s/^/==> /; 2,$s/^/    /' >&2
	fi
done

# do the thing
retval=0
restic "${!args_var}" || retval=$?

# run hooks
for hook in "$hooks"/*.post; do
	if [[ -x "$hook" ]]; then
		echo "Running hook: $hook" >&2
		"$hook" "$action" "$retval" 2>&1 | sed '1s/^/==> /; 2,$s/^/    /' >&2
	fi
done

# print timestamp
date +"$timefmt$prog: end $action"

# exit with success/failure
exit $retval

