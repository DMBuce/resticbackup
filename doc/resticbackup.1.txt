NAME
    resticbackup - Restic with hooks.

USAGE
    resticbackup ACTION

DESCRIPTION
    When invoked as "resticbackup foo", resticbackup will

    Run each "*.pre" hook. See "HOOKS" for details.
    Look up $RESTICBACKUP_FOO in the config. See "CONFIGURATION" for
    details.
    Run "restic $RESTICBACKUP_FOO".
    Run each "*.post" hook. See "HOOKS" for details.

    Invoking resticbackup as "resticbackup_foo" or "restic_foo" with no
    other arguments is equivalent to invoking it as "resticbackup foo".

CONFIGURATION
    The location of the configuration directory varies depending on how
    resticbackup was installed. Usually it is found at "/etc/resticbackup.d"
    or "/usr/local/etc/resticbackup.d" .

    The file named "config" within this directory is the config file. The
    format of this file is bash shell. Config options are set as shell
    variables, e.g. "OPTION=value". Options that are not use the environment
    variable of the same name, or a default if no such environment variable
    is defined. Values that contain whitespace must be quoted, e.g.
    "OPTION="my value"" or "OPTION='my value'". Other shell expansion rules
    apply. See "Parameters" in bash for details.

    Each config option is described below.

    RESTIC_PASSWORD_FILE, RESTIC_PASSWORD_COMMAND, RESTIC_REPOSITORY,
    RESTIC_REPOSITORY_FILE, etc.

        Config options are exported to restic's environment, so all of
        restic's environment variables are valid config options. See
        <https://restic.readthedocs.io/en/latest/040_backup.html#environment
        -variables> for details.

    LOG_FILE

        Controls logging behavior. Use '-' to log to stdout, 'syslog' to log
        to syslog (requires logger), or a filename to log to a file.

        Default: -

    RESTICBACKUP_*

        Each config option that starts with "RESTICBACKUP_" defines an
        action that can be invoked from the command line. The action's name
        is derived from the option name by removing "RESTICBACKUP_" and
        converting to lowercase. When invoking an action, the option's value
        is passed as arguments to restic.

        For example, "RESTICBACKUP_FOO="snapshots -v"" will cause
        "resticbackup foo" to run "restic snapshots -v" .

    Hook Options

    Hooks may have their own custom options. See HOOKS for details.

HOOKS
    In the same folder as the config file, there is a "hooks" directory
    where you can place hooks to run before or after the restic command. A
    hook is any executable that ends in ".pre" or ".post" . "resticbackup"
    will run "*.pre" hooks before running restic, and "*.post" hooks
    afterward.

    Pre hooks are passed two arguments: the status code of the last pre hook
    that failed (or 0 if no hooks failed), and the action about to be
    performed (e.g. for "resticbackup backup", the action is "backup"). If
    any pre hook fails, resticbackup will exit without running the restic
    command.

    Post hooks are also passed two arguments: the status code of the restic
    command that was run, and the action that was performed.

    Each hook runs in a modified environment that includes the options set
    in the config file.

    Several example hooks are provided with resticbackup. Their behavior and
    configuration options are described below.

    check-integ.post

        Does an integrity check when running "resticbackup prune". The
        result of the check is written to a spool file in the same format as
        Check MK local checks
        <https://docs.checkmk.com/latest/en/localchecks.html>.

        The config option controls the path to the spool file.

        Options:

        "CHECKMK_INTEGRITY_SPOOL=/path": The path to the spool file

    check-snaps.post

        Checks that the number of snapshots taken recently is above some
        threshold. The result of the check is written to a spool file in the
        same format as Check MK local checks
        <https://docs.checkmk.com/latest/en/localchecks.html>.

        Options:

        "CHECKMK_SNAPSHOTS_SPOOL=/path": The path to the spool file
        "CHECKMK_SNAPSHOTS_THRESHOLDS=period:num_crit:num_warn": The period
        of time to check, the warning threshold, and te critical threshold
        (e.g. "1day:6:10")

    "repo-mounted.pre"

        Checks to make sure that $RESTIC_REPOSITORY is mounted before taking
        a backup.

    "z-init-repo.pre"

        Initializes the repo if it hasn't yet been initialized.

EXAMPLES
    In order to use resticbackup, you will likely need to define a password
    and repository in the config file (usually located at
    "/etc/resticbackup.d" or "/usr/local/etc/resticbackup.d").

            RESTIC_PASSWORD_FILE=/etc/resticbackup.d/password
            RESTIC_REPOSITORY=/backup/restic

    You will also need to make sure that any custom actions are configured.
    There are two example actions in the default config:

        RESTICBACKUP_BACKUP="backup -v --exclude-file=/etc/resticbackup.d/exclude /"
        RESTICBACKUP_PRUNE="forget --prune --keep-hourly 12 --keep-daily 7 --keep-weekly 4 --keep-monthly 3"

    These settings will run the appropriate restic subcommands when invoking
    "resticbackup backup" and "resticbackup prune".

    You can configure resticbackup to run any restic command in this way.
    E.g. if you were to add the following setting, "resticbackup snap" would
    run "restic snapshots"

        RESTICBACKUP_SNAP=snapshots

    You can use symlinks to run restic commands without passing any
    arguments to resticbackup. For example, to run "resticbackup backup"
    daily and "resticbackup prune" weekly (assumes that cron is correctly
    configured)

            ln -s `which resticbackup` /etc/cron.daily/restic_backup
            ln -s `which resticbackup` /etc/cron.daily/resticbackup_prune

    In the same folder as the config file, there is a "hooks" directory
    where you can place executable hooks to run before or after the restic
    command. Several example hooks are provided that implement the following
    features:

    Check to make sure a repository is mounted before taking a backup
    Initialize the repo if it hasn't yet been initialized
    Do an integrity check after pruning the repository
    Check that the number of snapshots taken recently is above some
    threshold

    Some of these hooks have additional configuration settings in the config
    file. To use a hook, remove its ".disabled" extension.

AUTHORS
    resticbackup was written by DMBuce <https://github.com/DMBuce> .

DISTRIBUTION
    The latest version of resticbackup can be downloaded from
    https://github.com/DMBuce/resticbackup .

